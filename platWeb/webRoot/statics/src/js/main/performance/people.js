/** *description:历史订单 *author:fanwei *date:2015/3/2 */define(function(require, exports, module) {    var global = require("../../driver/global");    var Calendar = require('../../widget/form/calendar');    var fenye = require('../../widget/dom/fenye');    var oTip = require("../../widget/dom/tip");    var oTplList = require("../../tpl/performance/people");    var Select = require('../../widget/dom/select');    var Hairer = R.Class.create(R.util, {        initialize: function() {            this.province = $('[province]');            this.city = $('[city]');            this.area = $('[area]');            this.shop = $('[shop]');            this.areaRelated();            this.findShop();            this.showCalendar();            this.events();        },        events: function() {            var _this = this;            //查询店铺            $(document).on('change', '[area-wrap]', function() {                _this.areaParam = {                    province: _this.province.children().eq(_this.province[0].selectedIndex).attr('code'),                    city: _this.city.children().eq(_this.city[0].selectedIndex).attr('code'),                    county: _this.area.children().eq(_this.area[0].selectedIndex).attr('code'),                };                      _this.findShop(_this.areaParam);            });                        //查询店面人流情况            $(document).on('click', '[search-people-btn]', function() {                var pkShop = _this.shop.children().eq(_this.shop[0].selectedIndex).attr('pkkey');                var month = $('[calendar]').val();                if(!pkShop){                    oTip.say('请选择店铺');                    return;                }                if(!month){                    oTip.say('请选择月份');                    return;                }                _this.getPeopleCount(pkShop, month);            });        },        getPeopleCount: function(pkShop, month) {			var _this = this;			this.reqUrl = R.interfaces.performance.getPeopleCount;            this.reqParam = {                pkShop: pkShop,                month: month            };            this.req(function(data) {                // console.log(data);                _this.render($('[people-count]'), oTplList, data);                var customercount = 0;                var addcustomercount = 0;                var comboonecount = 0;                var servicecount = 0;                var totalcustomercount = 0;                var combocount = 0;                var totalcombocount = 0;                //计算总计                for(var i=0;i<data.data.length;i++){                   customercount += data.data[i].customercount;                   addcustomercount += data.data[i].addcustomercount;                   comboonecount += data.data[i].comboonecount;                   servicecount += data.data[i].servicecount;                   combocount += data.data[i].combocount;                }                totalcustomercount = data.data[data.data.length-1].totalcustomercount;                totalcombocount = data.data[data.data.length-1].totalcombocount;                $('[sum=customercount]').html(customercount);                $('[sum=addcustomercount]').html(addcustomercount);                $('[sum=comboonecount]').html(comboonecount);                $('[sum=servicecount]').html(servicecount);                $('[sum=combocount]').html(combocount);                $('[sum=totalcustomercount]').html(totalcustomercount);                $('[sum=totalcombocount]').html(totalcombocount);            });		},        showCalendar: function() {            var _this = this;            var oCalendar = new Calendar({                ele: '[calendar]',                format: 'yyyy-MM'            });                    },        areaRelated: function() {            //区域联动            var _this = this;            this.oProvince = new Select({                ele: this.province,                url: R.interfaces.global.getArea,                param: {belonglevel:1},                tpl:                 '{{each data}}'+                    '<option code="{{$value.pkArea}}" value="{{$value.areaname}}" id="{{$value.areaname}}">'+                        '{{$value.areaname}}'+                    '</option>'+                '{{/each}}',                onChange: function(oSelect, oOption, nowIndex) {                    var nowCode = oOption.attr('code');                    if(nowCode) {                        _this.reqUrl = R.interfaces.global.getArea;                        _this.reqParam = {                            pkFather: nowCode                        };                        _this.req(function(data){                            _this.oCity.clear();                            _this.oCity.render(data);                        });                    } else {                        _this.oCity.clear();                        _this.oArea.clear();                    }                },                onReady: function() {                    _this.areaCb && _this.areaCb();                }               });            this.oCity = new Select({                ele: this.city,                tpl:                 '{{each data}}'+                    '<option code="{{$value.pkArea}}" value="{{$value.areaname}}" id="{{$value.areaname}}">'+                        '{{$value.areaname}}'+                    '</option>'+                '{{/each}}',                onChange: function(oSelect, oOption, nowIndex) {                                        var nowCode = oOption.attr('code');                    if(nowCode) {                                                _this.reqUrl = R.interfaces.global.getArea;                        _this.reqParam = {                            pkFather: nowCode                        };                        _this.req(function(data){                            _this.oArea.clear();                            _this.oArea.render(data);                        });                    } else {                        _this.oArea.clear();                    }                }            });            this.oArea = new Select({                ele: this.area,                tpl:                 '{{each data}}'+                    '<option code="{{$value.pkArea}}" value="{{$value.areaname}}" id="{{$value.areaname}}">'+                        '{{$value.areaname}}'+                    '</option>'+                '{{/each}}'            });        },        findShop: function(param) {            var _this = this;            _this.shop.html('<option>请选择店铺</option>');            this.reqUrl = R.interfaces.shop.shopList;            this.reqParam = param || {};            this.req(function(data) {                var shopList = data.data.list;                for(var i=0;i<shopList.length;i++){                    var option = $('<option pkKey="'+shopList[i].pkShop+'">'+shopList[i].shopname+'</option>');                    _this.shop.append(option);                }            });        }    });    var oHairer = new Hairer();});